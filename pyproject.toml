[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "basd"
authors = [
  { name = "The foxBMS Team", email = "info@foxbms.org" },
]
dynamic = ["version", "description"]
requires-python = ">=3.10"

readme = "README.md"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Scientific/Engineering :: Visualization",
]

dependencies = [
  "click>=8.1.3",
  "scipy>=1.10.1",
  "pandas>=2.0.0",
  "numpy>=1.24.2",
  "matplotlib>=3.7.1",
  "cadquery>=2.2.0",
  "jsonschema>=4.17.3",
  "joblib>=1.2.0",
  "platformdirs>=3.5.0",
]
[project.optional-dependencies]
test = ["pytest >=2.7.3", "pytest-cov"]
doc = ["sphinx", "sphinxcontrib-programoutput", "furo", "sphinxcontrib-spelling"]
dev = ["black==23.3.0", "isort==5.12.0", "pylint==2.17.3", "mypy==1.2.0"]

[project.scripts]
basd = "basd:main"

[project.urls]
Home = "https://github.com/foxBMS/basd"
Documentation = "https://basd.readthedocs.io"
Source = "https://github.com/foxBMS/basd"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.git
    | \.eggs
    | \.tox
    | \.mypy_cache
    | \.vscode
    | __pycache__
    | build
    | docs/_ext
    | docs/_themes
    | src/basd/vendor
  )/
)
'''

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
skip = ["src/basd/vendor/"]

[tool.mypy]
show_column_numbers = true
follow_imports = "normal"
ignore_missing_imports = true
disallow_untyped_calls = true
warn_return_any = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_errors = true
cache_dir = "build/.mypy_cache"
exclude = ["src/basd/vendor/"]

[tool.pylint.master]
init-hook="sys.path.append('src')"
extension-pkg-allow-list = ""
fail-under = 10
ignore = "CVS"
ignore-patterns = ""
ignore-paths = [ "^src/basd/vendor/.*$"]
jobs = 1
limit-inference-results = 100
load-plugins = ""
persistent = "yes"
suggestion-mode = "yes"
unsafe-load-any-extension = "no"

[tool.pylint.messages_control]
confidence = ""
disable = """
        raw-checker-failed,
        bad-inline-option,
        locally-disabled,
        file-ignored,
        suppressed-message,
        useless-suppression,
        deprecated-pragma,
        use-symbolic-message-instead,
        logging-fstring-interpolation,
        fixme"""
enable = "c-extension-no-member"

[tool.pylint.reports]
evaluation = "10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"
output-format = "text"
reports = "no"
score = "yes"

[tool.pylint.refactoring]
max-nested-blocks = 5
never-returning-functions = "sys.exit,argparse.parse_erro"

[tool.pylint.basic]
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
bad-names = """foo,
          bar,
          baz,
          toto,
          tutu,
          tata"""
bad-names-rgxs = ""
class-attribute-naming-style = "any"
class-const-naming-style = "UPPER_CASE"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
docstring-min-length = -1
function-naming-style = "snake_case"
good-names = """df,
           i,
           j,
           k,
           ex,
           Run,
           _,
           _version,
           x,
           y,
           z,
           f,
           db,
           c
           """
good-names-rgxs = ""
include-naming-hint = "no"
inlinevar-naming-style = "any"
method-naming-style = "snake_case"
module-naming-style = "snake_case"
name-group = ""
no-docstring-rgx = "^_"
property-classes = "abc.abstractproperty"
variable-naming-style = "snake_case"

[tool.pylint.format]
expected-line-ending-format = ""
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"
indent-after-paren = 4
indent-string = "    "
max-line-length = 100
max-module-lines = 1000
single-line-class-stmt = "no"
single-line-if-stmt = "no"

[tool.pylint.logging]
logging-format-style = "old"
logging-modules = "logging"

[tool.pylint.miscellaneous]
notes = """FIXME,
      XXX,
      TODO"""

[tool.pylint.similarities]
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "no"
min-similarity-lines = 4

[tool.pylint.spelling]
max-spelling-suggestions = 4
spelling-dict = ""
spelling-ignore-comment-directives = "fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:"
spelling-ignore-words = ""
spelling-private-dict-file = ""
spelling-store-unknown-words = "no"

[tool.pylint.string]
check-quote-consistency = "no"
check-str-concat-over-line-jumps = "no"

[tool.pylint.typecheck]
contextmanager-decorators = "contextlib.contextmanager"
generated-members = ""
ignore-mixin-members = "yes"
ignore-none = "yes"
ignore-on-opaque-inference = "yes"
ignored-classes = """optparse.Values,
                   thread._local,
                   _thread._local"""
ignored-modules = ""
missing-member-hint = "yes"
missing-member-hint-distance = 1
missing-member-max-choices = 1
signature-mutators = ""

[tool.pylint.variables]
additional-builtins = ""
allow-global-unused-variables = "yes"
allowed-redefined-builtins = ""
callbacks = """cb_,
          _cb"""
dummy-variables-rgx = "_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_"
ignored-argument-names = "_.*|^ignored_|^unused_"
init-import = "no"
redefining-builtins-modules = """six.moves,
                               past.builtins,
                               future.builtins,
                               builtins,
                               io"""

[tool.pylint.classes]
check-protected-access-in-special-methods = "no"
defining-attr-methods = """__init__,
                      __new__,
                      setUp,
                      __post_init__"""
exclude-protected = """_asdict,
                  _fields,
                  _replace,
                  _source,
                  _make"""
valid-classmethod-first-arg = "cls"
valid-metaclass-classmethod-first-arg = "cls"

[tool.pylint.design]
max-args = 5
max-attributes = 7
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
max-statements = 50
min-public-methods = 2


[tool.pylint.imports]
allow-any-import-level = ""
allow-wildcard-with-all = "no"
analyse-fallback-blocks = "no"
deprecated-modules = "optparse,tkinter.tix"
ext-import-graph = ""
import-graph = ""
int-import-graph = ""
known-standard-library = ""
known-third-party = "enchant"
preferred-modules = ""

[tool.pylint.exceptions]
overgeneral-exceptions = """builtins.BaseException,
                       builtins.Exception"""
